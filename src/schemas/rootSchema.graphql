## This file contains the root schema for the Game GraphQL API.
## This is used to import the schema into Postman for testing and documentation.
## Not used in the codebase.

type Query {
    developers(limit: Int): [Developer]!
    developer(id: ID!): Developer!
    games(release_year: Int, limit: Int, page: Int): [Game]!
    game(id: ID!): Game!
    platforms: [Platform]!
    platform(id: ID!): Platform!
    genres: [Genre]!
    genre(id: ID, gameId: ID): Genre!
    ratings: [Rating]!
    rating(gameId: ID!): Rating!
  }

  type Mutation {
    registerUser(data: CreateUserInput!): registerUserResponse!
    loginUser(data: CreateLoginInput!): AuthPayload!
    addGame(data: CreateGameInput!): Game!
    deleteGame(id: ID!): ID!
    updateGame(id: ID!, data: UpdateGameInput!): Game!
  }

  type Developer {
    id: ID!
    name: String!
    games: [Game]
}

  type Game {
    id: ID!
    title: String!
    release_year: Int!
    genres: [Genre]
    platforms: [Platform]!
    rating: Rating
    developers: [Developer]!
  }  

  input CreateGameInput {
    id: ID
    title: String!
    release_year: Int!
    genres: [ID]
    platforms: [ID]!
    rating: ID
    developers: [ID]!
  }

  input UpdateGameInput {
    title: String
    release_year: Int
    genres: [ID]
    platforms: [ID]
    rating: ID
    developers: [ID]
  }

  type Genre {
    id: ID!
    name: String!
  }

  type Platform {
    id: ID!
    name: String!
  }

  type Rating {
    id: ID!
    text: String!
  }

  type User {
    id: ID!
    email: String!
    username: String!
  }  

  input CreateUserInput {
    id: ID
    email: String!
    username: String!
    password: String!
  }

  input CreateLoginInput {
    username: String!
    password: String!
  }

  type RegisterUserResponse {
    id: ID!
  }

  type AuthPayload {
    token: String!
  }